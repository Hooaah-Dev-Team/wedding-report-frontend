// Node.js 스크립트: reportMap.ts를 자동 생성
const fs = require("fs");
const path = require("path");

const reportDir = path.join(__dirname, "../src/app/report");
const sections = fs
  .readdirSync(reportDir)
  .filter((d) => fs.statSync(path.join(reportDir, d)).isDirectory());

const entries = [];
const imports = [];
const componentEntries = [];

sections.forEach((sec) => {
  const secPath = path.join(reportDir, sec);
  fs.readdirSync(secPath)
    .filter((file) => file.endsWith(".tsx"))
    .forEach((file) => {
      const m = file.match(/Page(\d+)\.tsx$/);
      if (!m) return;
      const pageNum = m[1];
      const secNum = sec.replace(/[^0-9]/g, "");
      const key = `${secNum}-${pageNum}`;
      const componentName = `Page${secNum}_${pageNum}`;

      // import 경로는 src/부터 시작하는 별칭(@)
      const impPath = `@/app/report/${sec}/${file.replace(/\.tsx$/, "")}`;
      entries.push(`  "${key}": "${impPath}"`);

      // dynamic import 생성
      imports.push(
        `const ${componentName} = dynamic(() => import("${impPath}"));`
      );

      // componentMap 엔트리 생성
      componentEntries.push(`  "${key}": ${componentName}`);
    });
});

const content =
  `// THIS FILE IS AUTO-GENERATED BY scripts/generateReportMap.js\n` +
  `import dynamic from "next/dynamic";\n\n` +
  `// Dynamic imports\n` +
  imports.join("\n") +
  "\n\n" +
  `// Component mapping\n` +
  `export const componentMap: Record<string, React.ComponentType> = {\n` +
  componentEntries.join(",\n") +
  `\n};\n\n` +
  `// Legacy reportMap (for compatibility)\n` +
  `export const reportMap: Record<string,string> = {\n` +
  entries.join(",\n") +
  `\n};\n`;

fs.writeFileSync(path.join(__dirname, "../src/reportMap.ts"), content);
console.log("✅ reportMap.ts generated with", entries.length, "entries");
